#!/bin/bash
# teiler - A script to share (german word: teilen) screenshots/casts for tiling WMs - Pun intended
# (c) Rasmus Steinke <rasi at xssn dot at>
# Additional Ideas, testing and some code by Zeltak <zeltak at gmail dot com>
#
# Requirements:
# xclip, dzen2, dmenu, ffmpeg, scrot, bc, some notification daemon
#
# Optional dependencies:
# Some image editing tool, scp or fb-client



if [[ -f $HOME/.config/teiler/config ]];
  then echo "Config found"
else
  echo "No config found" && notify-send "teiler" "No config found"
  echo "Please copy config.example to ~/.config/teiler/config"
  notify-send "Please copy config.example to ~/.config/teiler/config"
  echo "Terminating..."
  echo " "
  killall teiler
fi

if [[ -d $HOME/.local/share/teiler ]];
  then echo "data directory found"
else
  mkdir $HOME/.local/share/teiler
  touch $HOME/.local/share/teiler/temp_cast
fi


command -v dmenu >/dev/null 2>&1 || {
  notify-send "teiler" "dmenu is  not installed. Aborting." >&2; exit 1;
}

command -v dzen2 >/dev/null 2>&1 || {
  notify-send "teiler" "dzen2 is not installed. Aborting" >&2; exit 1;
}

UP1=`command -v scp`
UP2=`command -v fb`
if [[ -n "$UP1" || -n "$UP2" ]];
then echo "fb or scp found - great!"
else echo "neither fb or scp found" && notify-send "teiler" "no fb or scp found - please make sure to use imgur in config"
fi

command -v ffmpeg >/dev/null 2>&1 || {
   notify-send "teiler" "ffmpeg is not installed. Aborting" >&2; exit 1;
}

command -v scrot >/dev/null 2>&1 || {
   notify-send "teiler" "scrot is not installed. Aborting" >&2; exit 1; }

command -v bc >/dev/null 2>&1 || { notify-send "teiler" "bc is not installed. Aborting" >&2; exit 1;
}

echo "Please create a hotkey for teiler. You will know why, eventually :)"

source ~/.config/teiler/config
echo $FONT

function countdown1 () {
  for i in `seq $COUNTER1 -1 0`; do echo "$i ... GO!"; sleep 1; done
}
function countdown2 () {
  for i in `seq $COUNTER2 -1 0`; do echo "$i ... GO!"; sleep 1; done
}
function countdown3 () {
  for i in `seq $COUNTER3 -1 0`; do echo "$i ... GO!"; sleep 1; done
}

function archive_ul() {
if [ "$ARCHIVE_UL" == "1" ]; then
cp "$IMG_PATH"/lastimg.png "$IMG_PATH"/"$FILEMASK".png
else echo ""
fi
}

function archive_clip() {
if [ "$ARCHIVE_CLIP" == "1" ]; then
cp "$IMG_PATH"/lastimg.png "$IMG_PATH"/"$FILEMASK".png
else echo ""
fi
}

function archive_img() {
if [ "$ARCHIVE_IMG" == "1" ]; then
cp "$IMG_PATH"/lastimg.png "$IMG_PATH"/"$FILEMASK".png
else echo ""
fi
}



# Outsource the notfiy-send to its own function to clean up the mess below a bit ;)
function notify() {
  if [[ -n "$DUNST_FG" ]]
    then notify-send -u low -h string:bgcolor:$DUNST_BG -h string:fgcolor:$DUNST_FG --hint=int:transient:1 -t ${1} "Scrot" "${2}"
  else notify-send -u low --hint=int:transient:1 -t ${1} "Scrot" "${2}"
  fi
}

function rec_indicator() {
while true; do
source ~/.config/teiler/config
if pgrep -f x11grab
  then
   echo "$REC_TEXT"
elif pgrep -f byzanz-record
  then
   echo "$REC_TEXT"
else
echo ""
fi
sleep 1
done | dzen2 -fn "$REC_FONT" -fg "$REC_NF" -bg "$REC_SF" -w "$REC_W" -x "$REC_X" -y "$REC_Y" -p &
}


function notify_ul() {
  if [[ -n "$DUNST_FG" ]]
    then notify-send -u low -h string:bgcolor:$DUNST_BG -h string:fgcolor:$DUNST_FG --hint=int:transient:1 -t ${1} "Scrot" "${2}\n$(xclip -o)"
  else
  notify-send -u low --hint=int:transient:1 -t ${1} "Scrot" "${2}\n$(xclip -o)"
 fi
}

NOW=$(date +"%Y%m%d%H%M%S")

#Get Dimensions of active Window
function dimensions() {
  unset x y w h
  eval $(xwininfo -id $(xdotool getactivewindow) |
    sed -n -e "s/^ \+Absolute upper-left X: \+\([0-9]\+\).*/x=\1/p" \
           -e "s/^ \+Absolute upper-left Y: \+\([0-9]\+\).*/y=\1/p" \
           -e "s/^ \+Width: \+\([0-9]\+\).*/w=\1/p" \
           -e "s/^ \+Height: \+\([0-9]\+\).*/h=\1/p" )
}


#Some options depending which uploader is used (right now only fb and scp are supported)
	if [ $UL == "fb" ];
 		then UL_IMG="fb -n $FILEMASK lastimg.png"
             UL_VID="fb $(cat ~/.local/share/teiler/temp_cast)"
             UL_CLIP="fb clip-$NOW.txt #&& rm -f clip-$NOW.txt"
	elif [ $UL == "scp" ];
        then UL_IMG="echo $(date +"%Y%m%d%H%M%S") > ~/.local/share/teiler/timestamp && scp "$IMG_PATH"/lastimg.png "$ULHOST_IMG/$(cat ~/.local/share/teiler/timestamp).png" && echo -n "$URL_IMG/$(cat ~/.local/share/teiler/timestamp).png" | xclip"
             UL_VID="scp $(cat ~/.local/share/teiler/temp_cast) $ULHOST_VID && echo -n "$URL_VID/$(cat ~/.local/share/teiler/temp_cast)" | xclip"
             UL_CLIP="scp clip-$NOW.txt $ULHOST_PASTE && echo -n "$URL_PASTE/clip-$NOW.txt" | xclip"
    elif [ $UL == "imgur" ];
        then UL_IMG="curl -s -F "image=@lastimg.png" -F "key=486690f872c678126a2c09a9e196ce1b" https://imgur.com/api/upload.xml > ~/.local/share/teiler/imgur.xml
             xmllint ~/.local/share/teiler/imgur.xml --xpath '//original_image/text\()' | xclip"
	else
		echo "no supported uploader" && notify-send "teiler" "No supported Uploader"
fi

####Some Variables to clean up the code a bit
if [ "$DZEN2_TRANS" == "1" ]; then
  COUNTD="countdown1 | dzen2 -o 80 -fn '$DZEN2_FONT' -fg '$NF' -ta c -w '$DZEN2_W' -bg '$NB' -x '$DZEN2_X' -y '$DZEN2_Y'"
  COUNTD2="countdown2 | dzen2 -o 80 -fn '$DZEN2_FONT' -fg '$NF' -ta c -w '$DZEN2_W' -bg '$NB' -x '$DZEN2_X' -y '$DZEN2_Y'"
  COUNTD3="countdown3 | dzen2 -o 80 -fn '$DZEN2_FONT' -fg '$NF' -ta c -w '$DZEN2_W' -bg '$NB' -x '$DZEN2_X' -y '$DZEN2_Y'"
else 
  COUNTD="countdown1 | dzen2 -o 80 -fn '$DZEN2_FONT' -fg '$NF' -ta c -w '$DZEN2_W' -bg '$NB' -x '$DZEN2_X' -y '$DZEN2_Y'"
  COUNTD2="countdown2 | dzen2 -o 80 -fn '$DZEN2_FONT' -fg '$NF' -ta c -w '$DZEN2_W' -bg '$NB' -x '$DZEN2_X' -y '$DZEN2_Y'"
  COUNTD3="countdown3 | dzen2 -o 80 -fn '$DZEN2_FONT' -fg '$NF' -ta c -w '$DZEN2_W' -bg '$NB' -x '$DZEN2_X' -y '$DZEN2_Y'"
fi
XCLIP="(xclip -o) | xclip -selection clipboard"


cd $IMG_PATH

MENU="1. Screenshots
2. Screenshots (Upload)
3. Screencasts
---------------------------------
f. Quick Screenshot (Fullscreen)
a. Quick Screenshot (Area)
c. Quick Screencast
x. Upload Clipboard content (Delayed)
k. Stop Recording of any Screencast
i. Copy last image to clipboard
"

if [ "$DMENU_TRANS" == "1" ]; then
  CHOICE="$(echo "$MENU" | dmenu -o 0.9 -l 20 -fn "$FONT" -nf "$NF" -nb "$NB" -sf "$SF" -sb "$SB" -p "Make Your Wish:")"
else
  CHOICE="$(echo "$MENU" | dmenu -l 20 -fn "$FONT" -nf "$NF" -nb "$NB" -sf "$SF" -sb "$SB" -p "Make Your Wish:")"
fi

  case "$CHOICE" in
    "1. Screenshots")
MENU="1. Fullscreen
2. Fullscreen (Edit)
3. Fullscreen (Clipboard)
4. Fullscreen (Delayed)
5. Fullscreen (Delayed & Edit)
6. Fullscreen (Delayed & Clipboard)
7. Area
8. Area (Edit)
9. Area (Clipboard)
"

if [ "$DMENU_TRANS" == "1" ]; then
CHOICE="$(echo "$MENU" | dmenu -o 0.9 -l 20 -fn "$FONT" -nf "$NF" -nb "$NB" -sf "$SF" -sb "$SB" -p "Make Your Wish:")"
else
CHOICE="$(echo "$MENU" | dmenu -l 20 -fn "$FONT" -nf "$NF" -nb "$NB" -sf "$SF" -sb "$SB" -p "Make Your Wish:")"
fi

  case "$CHOICE" in
    "1. Fullscreen")
     scrot -d 1 lastimg.png
     notify ${TIME} "Screenshot saved"
     archive_img
   ;;
    "2. Fullscreen (Edit)")
     scrot -d 1 lastimg.png -e "$EDIT \$f"
     eval $XCLIP
     notify ${TIME} "Screenshot saved"
     archive_img
   ;;
    "3. Fullscreen (Clipboard)")
     scrot -d 1 lastimg.png
     archive_clip
     imgclip.py "$IMG_PATH"/lastimg.png &
     eval $COUNTD3 & sleep $(echo $COUNTER3+1 | bc)
     kill $(pgrep -f imgclip.py)
   ;;
    "4. Fullscreen (Delayed)")
     eval $COUNTD & sleep $(echo $COUNTER1+1 | bc)
     scrot -d 1 lastimg.png
     notify ${TIME} "Screenshot saved"
     archive_img
   ;;
    "5. Fullscreen (Delayed & Edit)")
     eval $COUNTD & sleep $(echo $COUNTER1+1 | bc)
     scrot -d 1 lastimg.png -e "$EDIT \$f"
     notify ${TIME} "Screenshot saved"
     archive_img
   ;;
    "6. Fullscreen (Delayed & Clipboard)")
     eval $COUNTD & sleep $(echo $COUNTER1+1 | bc)
     scrot -d 1 lastimg.png
     archive_clip
     imgclip.py "$IMG_PATH"/lastimg.png &
     eval $COUNTD3 & sleep $(echo $COUNTER3+1 | bc)
     kill $(pgrep -f imgclip.py)
   ;;
    "7. Area")
     scrot -s lastimg.png
     notify ${TIME} "Screenshot saved"
     archive_img
   ;;
    "8. Area (Edit)")
    scrot -s lastimg.png -e "$EDIT \$f"
    eval $XCLIP
    notify ${TIME} "Screenshot saved"
    archive_img
   ;;
    "9. Area (Clipboard)")
    scrot -s lastimg.png
    archive_clip
    imgclip.py "$IMG_PATH"/lastimg.png &
    eval $COUNTD3 & sleep $(echo $COUNTER3+1 | bc)
    kill $(pgrep -f imgclip.py)
;;
*)
$0
esac
;;
"2. Screenshots (Upload)")
MENU="1. Fullscreen
2. Fullscreen (Edit)
3. Fullscreen (Delayed)
4. Fullscreen (Delayed & Edit)
5. Area
6. Area (Edit)
"

if [ "$DMENU_TRANS" == "1" ]; then
CHOICE="$(echo "$MENU" | dmenu -o 0.9 -l 20 -fn "$FONT" -nf "$NF" -nb "$NB" -sf "$SF" -sb "$SB" -p "Make Your Wish:")"
else
CHOICE="$(echo "$MENU" | dmenu -l 20 -fn "$FONT" -nf "$NF" -nb "$NB" -sf "$SF" -sb "$SB" -p "Make Your Wish:")"
fi

  case "$CHOICE" in
    "1. Fullscreen")
     scrot -d 1 lastimg.png -e "$UL_IMG"
     eval $XCLIP
     notify_ul ${TIME} "Screenshot uploaded"
     archive_ul
   ;;
    "2. Fullscreen (Edit)")
     scrot -d 1 lastimg.png -e "$EDIT \$f && $UL_IMG"
     eval $XCLIP && notify_ul ${TIME} "Screenshot uploaded"
     archive_ul
   ;;
    "3. Fullscreen (Delayed)")
     eval $COUNTD & sleep $(echo $COUNTER1+1 | bc)
     scrot -d 1 lastimg.png -e "$UL_IMG"
     eval $XCLIP && notify_ul ${TIME} "Screenshot uploaded"
     archive_ul
   ;;
    "4. Fullscreen (Delayed & Edit)")
     eval $COUNTD & sleep $(echo $COUNTER1+1 | bc)
     scrot -d 1 lastimg.png -e "$EDIT \$f && $UL_IMG"
     eval $XCLIP
     notify_ul ${TIME} "Screenshot uploaded"
     archive_ul
   ;;
    "5. Area")
     scrot -s lastimg.png -e "$UL_IMG"
     eval $XCLIP
     notify_ul ${TIME} "Screenshot uploaded"
     archive_ul
   ;;
    "6. Area (Edit)")
    scrot -s lastimg.png -e "$EDIT \$f && $UL_IMG"
    eval $XCLIP
    notify_ul ${TIME} "Screenshot uploaded"
    archive_ul
   ;;
*)
$0
esac
;;
"3. Screencasts")
MENU="1. Fullscreen
2. Window
3. GIF (Fullscreen)
4. GIF (Window)
"
if [ "$DMENU_TRANS" == "1" ]; then
CHOICE="$(echo "$MENU" | dmenu -o 0.9 -l 20 -fn "$FONT" -nf "$NF" -nb "$NB" -sf "$SF" -sb "$SB" -p "Make Your Wish:")"
else
CHOICE="$(echo "$MENU" | dmenu -l 20 -fn "$FONT" -nf "$NF" -nb "$NB" -sf "$SF" -sb "$SB" -p "Make Your Wish:")"
fi

  case "$CHOICE" in
    "1. Fullscreen")
     rm -f ~/.local/share/teiler/temp_cast
     echo "$NOW.webm" > ~/.local/share/teiler/temp_cast
     ffmpeg -f x11grab -s $RES -i $DISPLAY+0,0 $FFAUDIO $ENCOPTS $NOW.webm &
     notify ${TIME} "Screencast started" & rec_indicator &
   ;;
    "2. Window")
     eval $COUNTD & sleep $(echo $COUNTER1+1 | bc)
     rm -f ~/.local/share/teiler/temp_cast
     echo "$NOW.webm" > ~/.local/share/teiler/temp_cast
     dimensions
     ffmpeg -f x11grab -s "${w}x${h}" -i $DISPLAY+$x,$y $FFAUDIO $ENCOPTS $NOW.webm &
     notify ${TIME} "Screencast started" & rec_indicator &
   ;;
    "3. GIF (Fullscreen)")
     rm -f ~/.local/share/teiler/temp_cast
     echo "$NOW.gif" > ~/.local/share/teiler/temp_cast
     byzanz-record -d 9999 $NOW.gif &
     notify ${TIME} "Screencast started" & rec_indicator &
   ;;
    "4. GIF (Window)")
     eval $COUNTD & sleep $(echo $COUNTER1+1 | bc)
     rm -f ~/.local/share/teiler/temp_cast
     echo "$NOW.gif" > ~/.local/share/teiler/temp_cast
     dimensions && byzanz-record -x $x -y $y -w $w -h $h -d 9999 $NOW.gif &
     notify ${TIME} "Screencast started" & rec_indicator &
   ;;
*)
$0
esac
;;
"f. Quick Screenshot (Fullscreen)")
if [ "$QUICKUL" == "1" ]; then 
    if [ "$QUICKEDIT" == "1" ]; then
      scrot -d 1 lastimg.png -e "$UL_IMG"
      eval $XCLIP
      notify_ul ${TIME} "Screenshot uploaded"
      archive_ul
    elif [ "$QUICKEDIT" == "0" ]; then
      scrot -d 1 lastimg.png -e "$UL_IMG"
      eval $XCLIP
      notify_ul ${TIME} "Screenshot uploaded"
      archive_ul
    fi
elif [ "$QUICKUL" == "0" ]; then
  scrot -d 1 lastimg.png
  archive_img
    if [ "$QUICKEDIT" == "1" ]; then
      $EDIT lastimg.png
      notify ${TIME} "Screenshot saved"
    elif [ "$QUICKEDIT" == "0" ]; then
      notify_ul ${TIME} "Screenshot saved"
    fi
fi
;;
"a. Quick Screenshot (Area)")
if [ "$QUICKUL" == "1" ]; then 
    if [ "$QUICKEDIT" == "1" ]; then
      scrot -s lastimg.png -e "$EDIT \$f && $UL_IMG"
      eval $XCLIP
      notify_ul ${TIME} "Screenshot uploaded"
      archive_ul
    elif [ "$QUICKEDIT" == "0" ]; then
      scrot -s lastimg.png -e "$UL_IMG"
      eval $XCLIP
      notify_ul ${TIME} "Screenshot uploaded"
      archive_ul
    fi
elif [ "$QUICKUL" == "0" ]; then
  scrot -s lastimg.png
  archive_img
    if [ "$QUICKEDIT" == "1" ]; then
      $EDIT lastimg.png
      notify_ul ${TIME} "Screenshot saved"
    elif [ "$QUICKEDIT" == "0" ]; then
       notify_ul ${TIME} "Screenshot saved"
    fi
fi
;;
"c. Quick Screencast")
 rm -f ~/.local/share/teiler/temp_cast
 echo "$NOW.webm" > ~/.local/share/teiler/temp_cast
 ffmpeg -f x11grab -s $RES -i $DISPLAY+0,0 $FFAUDIO $ENCOPTS $NOW.webm &
 notify ${TIME} "Screencast started" & rec_indicator &
;;
"x. Upload Clipboard content (Delayed)")
if [ $UL == "imgur" ];
  then notify-send "imgur" "imgur does not support text"
else 
    eval $COUNTD2 & sleep $(echo $COUNTER2+1 | bc)
    xclip -o > clip-$NOW.txt
    eval $UL_CLIP
    eval $XCLIP
    notify_ul ${TIME} "Clipboard uploaded"
fi
;;
"k. Stop Recording of any Screencast")
if [ $UL == "imgur" ];
  then notify-send "imgur" "imgur does not support videos"
  kill $(pgrep -f x11grab)
    pkill -f rec_indicator
    kill $(pgrep -n dzen2)
else
  if [[ $(pgrep -f x11grab) ]]
    then kill $(pgrep -f x11grab)
    pkill -f rec_indicator
    kill $(pgrep -n dzen2)
    sleep 3
MENU="1. Yes
2. No
"
if [ "$DMENU_TRANS" == "1" ]; then
CHOICE="$(echo "$MENU" | dmenu -o 0.9 -l 20 -fn "$FONT" -nf "$NF" -nb "$NB" -sf "$SF" -sb "$SB" -p "Upload Video?:")"
else
CHOICE="$(echo "$MENU" | dmenu -l 20 -fn "$FONT" -nf "$NF" -nb "$NB" -sf "$SF" -sb "$SB" -p "Upload VIdeo?")"
fi
 case "$CHOICE" in
    "1. Yes")
     eval $UL_VID
     eval $XCLIP
     notify_ul ${TIME} "Screencast uploaded"
   ;;
    "2. No)")
     echo "foo"
   ;;
*)
esac
kill $(cat ~/.local/share/teiler/temppid)
  elif [ $(pgrep -f byzanz-record) ]
    then killall byzanz-record
    pkill -f rec_indicator
    kill $(pgrep -n dzen2)
      sleep 3
MENU="1. Yes
2. No
"
if [ "$DMENU_TRANS" == "1" ]; then
CHOICE="$(echo "$MENU" | dmenu -o 0.9 -l 20 -fn "$FONT" -nf "$NF" -nb "$NB" -sf "$SF" -sb "$SB" -p "Upload Video?:")"
else
CHOICE="$(echo "$MENU" | dmenu -l 20 -fn "$FONT" -nf "$NF" -nb "$NB" -sf "$SF" -sb "$SB" -p "Upload VIdeo?")"
fi
 case "$CHOICE" in
    "1. Yes")
     eval $UL_VID
     eval $XCLIP
     notify_ul ${TIME} "Screencast uploaded"
   ;;
    "2. No)")
     echo "foo"
   ;;
*)
esac
    pkill -f rec_indicator
    kill $(pgrep -n dzen2)
      else
      echo "foo"
      fi
killall teiler
fi
   ;;
"i. Copy last image to clipboard")
imgclip.py "$IMG_PATH"/lastimg.png &
eval $COUNTD3 & sleep $(echo $COUNTER3+1 | bc)
kill $(pgrep -f imgclip.py)
;;
*)
echo "foo"
esac
